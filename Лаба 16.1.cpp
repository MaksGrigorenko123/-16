#include <iostream>//бібліотека вводу та виводу 
#include <cstdlib>// Для функцій rand і srand
#include <ctime>// Для функції time
#define rows 5//символічна константа з розміром 5
#define cols 5//символічна константа з розміром 5
using namespace std;//простір імен std

int main() {
    setlocale(LC_ALL, "rus");

    int s[rows][cols];//задання матриці 
    srand(time(NULL));// Встановлення випадкового початкового елемента для функції rand
    /*
    Для того, щоб генерувати випадкові числа, функція rand зазвичай ініціалізуєтся
    деякими різними значення, наприклад, такі значення генеруються функцією time.
    Значення, повернене функцією time(оголошена в заголовку <ctime>),
    відрізняється кожну секунду, що дає можливість отримувати абсолютно випадкові
    послідовності чисел, при кожному новому виконанні функції rand.
    */

    for (int i = 0; i < rows; ++i) {//Цикл для  заповнення матриці випадковими елементами
        for (int a = 0; a < cols; ++a) {//Цикл для  заповнення матриці випадковими елементами
            s[i][a] = (rand() % 100);  // Генеруємо випадкове число від 0 до 100
        }
    }

    cout << "Matrix before replacement: " << endl;// Виведення повідомлення 
    for (int i = 0; i < rows; ++i) {//цикл для виведення 
        for (int a = 0; a < cols; ++a) {
            cout << s[i][a] << " ";//виведення матриці 
        }
        cout << endl;//щоб вийшла матриця 
    }
    int maxElement = s[0][0];//задання змінної першим елементом матриці 

    for (int a = 0; a < cols; ++a) {//цикл для перерахунку стовпців 
        for (int i = 1; i < rows; ++i) {//цикл для перерахунку рядків
            if (s[i][a] > maxElement) {//логічна умова 
                maxElement = s[i][a];//якщо виконується 
            }
        }
    }
    for (int a = 0; a < cols; ++a) {//цикл для перерахунку стовпців 
        for (int i = 0; i < rows; ++i) {//цикл для перерахунку рядків 
            if (s[i][a] == 0) {//логічна умова 
                s[i][a] = maxElement;//якщо виконуєтьсяя 
            }
        }
    }

    cout << "Matrix after replacement:" << endl;// Виведення результату
    for (int i = 0; i < rows; ++i) {
        for (int a = 0; a < cols; ++a) {
            cout << s[i][a] << " ";
        }
        cout << endl;
    }

    return 0;//логічний кінець 
}


